/* ------------------------------------------------------------------------ */

#define SRC_DIR_CONVERT    "/convert" 

/**
 * Converts sound assets in the conversion directories.
 * Puts them in the sound assets folder.
 */
check function doConvertSounds() {
	
	initBuild();

	sourceDir = getSourceDirectory() + SRC_DIR_CONVERT + "/sounds";
	targetDir = getBuildDirectory() + SRC_DIR_CONVERT + "/sounds";
	verifydirs(sourceDir);
	verifydirs(targetDir);
		
	hash = directoryHasChanged(sourceDir);
	if (hash === null) {
		println("[Skipped] Sound conversion directory (" + sourceDir + ") up to date.");
		return;
	}

	println("Converting sounds...");
	
	convertdmx(sourceDir, targetDir);

	storeDirectoryChanged(sourceDir, hash);
	setBuilt("convert-sound");
	println("Sounds converted from `" + sourceDir + "` to `" + targetDir + "`.");
}

/**
 * Converts graphics assets in the conversion directories.
 * Puts them in the graphics assets folder.
 */
check function doConvertGraphics() {
	
	initBuild();

	sourceDir = getSourceDirectory() + SRC_DIR_CONVERT + "/graphics";
	targetDir = getBuildDirectory() + SRC_DIR_CONVERT + "/graphics";
	verifydirs(sourceDir);
	verifydirs(targetDir);
			
	hash = directoryHasChanged(sourceDir);
	if (hash === null) {
		println("[Skipped] Graphic conversion directory (" + sourceDir + ") up to date.");
		return;
	}

	println("Converting graphics...");
	
	convertimg(sourceDir, targetDir, "graphics");

	storeDirectoryChanged(sourceDir, hash);
	setBuilt("convert-graphics");
	println("Graphics converted from `" + sourceDir + "` to `" + targetDir + "`.");
}

/**
 * Converts sprite assets in the conversion directories.
 * Puts them in the sprite assets folder.
 */
check function doConvertSprites() {
	
	initBuild();

	sourceDir = getSourceDirectory() + SRC_DIR_CONVERT + "/sprites";
	targetDir = getBuildDirectory() + SRC_DIR_CONVERT + "/sprites";
	verifydirs(sourceDir);
	verifydirs(targetDir);
			
	hash = directoryHasChanged(sourceDir);
	if (hash === null) {
		println("[Skipped] Sprite conversion directory (" + sourceDir + ") up to date.");
		return;
	}

	println("Converting sprites...");
	
	convertimg(sourceDir, targetDir, "graphics");

	storeDirectoryChanged(sourceDir, hash);
	setBuilt("convert-sprites");
	println("Sprites converted from `" + sourceDir + "` to `" + targetDir + "`.");
}

/**
 * Converts colormap assets in the conversion directories.
 * Puts them in the colormap assets folder.
 */
check function doConvertColormaps() {
	
	initBuild();

	sourceDir = getSourceDirectory() + SRC_DIR_CONVERT + "/colormaps";
	targetDir = getBuildDirectory() + SRC_DIR_CONVERT + "/colormaps";
	verifydirs(sourceDir);
	verifydirs(targetDir);
			
	hash = directoryHasChanged(sourceDir);
	if (hash === null) {
		println("[Skipped] Colormap conversion directory (" + sourceDir + ") up to date.");
		return;
	}

	println("Converting colormaps...");
	
	convertimg(sourceDir, targetDir, "colormaps");

	storeDirectoryChanged(sourceDir, hash);
	setBuilt("convert-colormaps");
	println("Colormaps converted from `" + sourceDir + "` to `" + targetDir + "`.");
}



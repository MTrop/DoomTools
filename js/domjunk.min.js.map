{"version":3,"sources":["STDIN"],"sourcesContent":["/****************************************************************************\r\n * DOMJunk by Matt Tropiano (C) 2021\r\n * Requires ECMAScript 6\r\n * Licensed for use under the MIT License\r\n * @license\r\n ****************************************************************************/\r\n(function(CTX){\r\n\t\r\n\t\t/********************************************************************/\r\n\t\t/** Test Browser Capabilities                                      **/\r\n\t\t/********************************************************************/\r\n\t\r\n\t\tif (!CTX.document.querySelectorAll) {\r\n\t\t\tconsole.error(\"Missing required function: document.querySelectorAll.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!CTX.document.querySelector) {\r\n\t\t\tconsole.error(\"Missing required function: document.querySelector.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!CTX.document.createElement) {\r\n\t\t\tconsole.error(\"Missing required function: document.createElement.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!CTX.document.createTextNode) {\r\n\t\t\tconsole.error(\"Missing required function: document.createTextNode.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!CTX.Element.prototype.querySelectorAll) {\r\n\t\t\tconsole.error(\"Missing required function: Element.querySelectorAll.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!CTX.Element.prototype.querySelector) {\r\n\t\t\tconsole.error(\"Missing required function: Element.querySelector.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!CTX.DOMParser) {\r\n\t\t\tconsole.error(\"Missing required object: DOMParser.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\r\n\t\t/********************************************************************/\r\n\t\t/** Utilities                                                      **/\r\n\t\t/********************************************************************/\r\n\r\n\t\tconst isType = function(obj, type) {\r\n\t\t\treturn Object.prototype.toString.call(obj) === '[object '+type+']';\r\n\t\t};\r\n\r\n\t\tconst isUndefined = function(obj) {\r\n\t\t\treturn (typeof obj) === 'undefined';\r\n\t\t};\r\n\r\n\t\tconst isNull = function(obj) {\r\n\t\t\treturn obj === null;\r\n\t\t};\r\n\r\n\t\tconst isBoolean = function(obj) {\r\n\t\t\treturn isType(obj, 'Boolean');\r\n\t\t};\r\n\r\n\t\tconst isNumber = function(obj) {\r\n\t\t\treturn isType(obj, 'Number');\r\n\t\t};\r\n\r\n\t\tconst isString = function(obj) {\r\n\t\t\treturn isType(obj, 'String');\r\n\t\t};\r\n\r\n\t\tconst isArray = function(obj) {\r\n\t\t\treturn isType(obj, 'Array');\r\n\t\t};\r\n\r\n\t\tconst isFunction = function(obj) {\r\n\t\t\treturn isType(obj, 'Function');\r\n\t\t};\r\n\r\n\t\tconst isObject = function(obj) {\r\n\t\t\treturn isType(obj, 'Object');\r\n\t\t};\r\n\r\n\t\tconst isBlank = function(obj) {\r\n\t\t\treturn (\r\n\t\t\t\t   isUndefined(obj)\r\n\t\t\t\t|| isNull(obj) \r\n\t\t\t\t|| (isArray(obj) && obj.length === 0) \r\n\t\t\t\t|| (isNumber(obj) && isNaN(obj)) \r\n\t\t\t\t|| (isString(obj) && obj.trim().length === 0)\r\n\t\t\t\t|| obj === 0 \r\n\t\t\t);\r\n\t\t};\r\n\t\t\r\n\t\tconst each = function(list, func) {\r\n\t\t\tif (isUndefined(list) || isNull(list)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (isBoolean(list) || isNumber(list) || isString(list)) {\r\n\t\t\t\tfunc(list, null, 1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor (let x in list) if (list.hasOwnProperty(x)) {\r\n\t\t\t\t\tif (func(list[x], x, list.length))\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst fold = function(obj, func) {\r\n\t\t\tfunc(obj);\r\n\t\t\treturn obj;\r\n\t\t};\r\n\r\n\t\tconst merge = function() {\r\n\t\t\tlet out = {};\r\n\t\t\teach(arguments, (a) => {\r\n\t\t\t\tout = {...out, ...a};\r\n\t\t\t});\r\n\t\t\treturn out;\r\n\t\t};\r\n\r\n\t\tconst queryString = function(map) {\r\n\t\t\tlet accum = [];\r\n\t\t\teach(map, (value, key) => {\r\n\t\t\t\tif (isArray(value)) {\r\n\t\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\t\taccum.push(\r\n\t\t\t\t\t\t\tencodeURIComponent(key) + '=' + encodeURIComponent(value[i])\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!isUndefined(value) && !isNull(value)) {\r\n\t\t\t\t\taccum.push(\r\n\t\t\t\t\t\tencodeURIComponent(key) + '=' + encodeURIComponent(value)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn accum.join('&');\r\n\t\t};\r\n\t\t\r\n\t\tconst createElement = function(name, attribs, children) {\r\n\t\t\tconst out = document.createElement(name);\r\n\t\t\tif (attribs) each(attribs, (v, k) => {\r\n\t\t\t\tconst attrObj = document.createAttribute(k);\r\n\t\t\t\tattrObj.value = v;\r\n\t\t\t\tout.setAttributeNode(attrObj);\r\n\t\t\t});\r\n\r\n\t\t\tif (children) {\r\n\t\t\t\tif (isArray(children)) {\r\n\t\t\t\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\t\t\t\tout.appendChild(children[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tout.appendChild(children);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn out;\r\n\t\t};\r\n\r\n\t\t// Matches() polyfill.\r\n\t\tconst elemMatches = (\r\n\t\t\tElement.prototype.matches ||\r\n\t\t\tElement.prototype.matchesSelector || \r\n\t\t\tElement.prototype.msMatchesSelector\r\n\t\t);\r\n\t\t\r\n\t\tconst matches = function(elem, selector){\r\n\t\t\treturn elemMatches.call(elem, selector);\r\n\t\t};\r\n\r\n\t\tconst createText = function(data) {\r\n\t\t\treturn document.createTextNode(data);\r\n\t\t};\r\n\r\n\t\tconst ENTITIES = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#39;',\r\n\t\t\t'/': '&#x2F;',\r\n\t\t\t'`': '&#x60;',\r\n\t\t\t'=': '&#x3D;'\r\n\t\t};\r\n\t\t\r\n\t\tconst HTML_SPECIAL = /&|\\<|\\>|\\\"|\\'|\\/|`|=/g;\r\n\r\n\t\tconst AJAX_OPTIONS_DEFAULTS = {\r\n\t\t\t\"data\": null,\r\n\t\t\t\"dataType\": 'form',\r\n\t\t\t\"responseType\": null,\r\n\t\t\t\"headers\": {},\r\n\t\t\t\"responseIsSuccess\": false,\r\n\t\t\t\"async\": true,\r\n\t\t\t\"user\": null,\r\n\t\t\t\"password\": null\r\n\t\t};\r\n\r\n\t\t/********************************************************************/\r\n\t\t/** Other Getters                                                  **/\r\n\t\t/********************************************************************/\r\n\r\n\t\t/**\r\n\t\t * Fetches an element by its id attribute and wraps it in a SelectionGroup.\r\n\t\t * In most cases, this is more performant than a CSS query.\r\n\t\t * @param {string} id the id.\r\n\t\t * @returns {SelectionGroup} the corresponding element in a SelectionGroup, or empty group if no element.\r\n\t\t */\r\n\t\tconst $getById = function(id) {\r\n\t\t\treturn new SelectionGroup(document.getElementById(id), true);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Fetches a group of elements by an associated class name.\r\n\t\t * In most cases, this is more performant than a CSS query.\r\n\t\t * @param {string} classname the class name.\r\n\t\t * @returns {SelectionGroup} the corresponding elements in a SelectionGroup, or empty group if no elements.\r\n\t\t */\r\n\t\tconst $getByClassName = function(classname) {\r\n\t\t\treturn new SelectionGroup(document.getElementsByClassName(classname));\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Fetches a group of elements by an associated tag name (and optional namespace).\r\n\t\t * In most cases, this is more performant than a CSS query.\r\n\t\t * @param {string} tagname the tag name.\r\n\t\t * @param {string} namespace (optional) the tag namespace.\r\n\t\t * @returns {SelectionGroup} the corresponding elements in a SelectionGroup, or empty group if no elements.\r\n\t\t */\r\n\t\tconst $getByTagName = function(tagname, namespace) {\r\n\t\t\treturn isUndefined(namespace) \r\n\t\t\t\t? new SelectionGroup(document.getElementsByTagName(tagname)) \r\n\t\t\t\t: new SelectionGroup(document.getElementsByTagNameNS(namespace, tagname))\r\n\t\t\t;\r\n\t\t};\r\n\r\n\t\t/********************************************************************/\r\n\t\t/** Classes                                                        **/\r\n\t\t/********************************************************************/\r\n\r\n\t\tclass SelectionGroup {\r\n\t\t\tconstructor(elements, forceOne) {\r\n\t\t\t\t// Make empty if no elements.\r\n\t\t\t\tif (isUndefined(elements) || isNull(elements)) {\r\n\t\t\t\t\tthis.length = 0;\r\n\t\t\t\t}\r\n\t\t\t\t// Wrap in one thing if not an array or list.\r\n\t\t\t\telse if (!!forceOne || isUndefined(elements.length)) {\r\n\t\t\t\t\tthis[0] = elements;\r\n\t\t\t\t\tthis.length = 1;\r\n\t\t\t\t}\r\n\t\t\t\t// Else, turn into selection.\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\t\t\tthis[i] = elements[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.length = elements.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/********************************************************************/\r\n\r\n\t\tclass AJAXCall {\r\n\r\n\t\t\tconstructor(url, opt, body) {\r\n\t\t\t\t// callbacks\r\n\t\t\t\tthis.beforeSendFunc = null;\r\n\t\t\t\t\r\n\t\t\t\tthis.uploadStartFunc = null;\r\n\t\t\t\tthis.uploadProgressFunc = null;\r\n\t\t\t\tthis.uploadSuccessFunc = null;\r\n\t\t\t\tthis.uploadEndFunc = null;\r\n\r\n\t\t\t\tthis.startFunc = null;\r\n\t\t\t\tthis.progressFunc = null;\r\n\t\t\t\tthis.successFunc = null;\r\n\t\t\t\tthis.failureFunc = null;\r\n\t\t\t\tthis.alwaysFunc = null;\r\n\t\t\t\tthis.abortFunc = null;\r\n\t\t\t\tthis.timeoutFunc = null;\r\n\r\n\t\t\t\tconst FAILFUNC = (event) => {\r\n\t\t\t\t\tthis.failureFunc && this.failureFunc(xhr.status, xhr.statusText, xhr, event);\r\n\t\t\t\t};\r\n\t\t\t\tconst ABORTFUNC = (event) => {\r\n\t\t\t\t\tthis.abortFunc && this.abortFunc(xhr, event);\r\n\t\t\t\t};\r\n\t\t\t\tconst TIMEOUTFUNC = (event) => {\r\n\t\t\t\t\tthis.timeoutFunc && this.timeoutFunc(xhr, event);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst xhr = new XMLHttpRequest();\r\n\t\t\t\t// open connection.\r\n\t\t\t\txhr.open(opt.method, url, opt.async, opt.user, opt.password);\r\n\t\t\t\tif (opt.headers) each(opt.headers, (value, key) => {\r\n\t\t\t\t\txhr.setRequestHeader(key, value);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// ==== Upload ====\r\n\t\t\t\txhr.upload.onloadstart = (event) => {\r\n\t\t\t\t\tthis.uploadStartFunc && this.uploadStartFunc(xhr, event);\r\n\t\t\t\t};\r\n\t\t\t\txhr.upload.onprogress = (event) => {\r\n\t\t\t\t\tthis.uploadProgressFunc && this.uploadProgressFunc((event.lengthComputable ? event.loaded / event.total : 0), event.loaded, event.total, xhr, event);\r\n\t\t\t\t};\r\n\t\t\t\txhr.upload.onload = (event) => {\r\n\t\t\t\t\tthis.uploadSuccessFunc && this.uploadSuccessFunc(xhr, event);\r\n\t\t\t\t};\r\n\t\t\t\txhr.upload.onloadend = (event) => {\r\n\t\t\t\t\tthis.uploadEndFunc && this.uploadEndFunc(xhr, event);\r\n\t\t\t\t};\r\n\t\t\t\txhr.upload.onerror = FAILFUNC;\r\n\t\t\t\txhr.upload.onabort = ABORTFUNC;\r\n\t\t\t\txhr.upload.ontimeout = TIMEOUTFUNC;\r\n\r\n\t\t\t\t// ==== Download ====\r\n\t\t\t\txhr.onloadstart = (event) => {\r\n\t\t\t\t\tthis.startFunc && this.startFunc(xhr, event);\r\n\t\t\t\t};\r\n\t\t\t\txhr.onprogress = (event) => {\r\n\t\t\t\t\tthis.progressFunc && this.progressFunc((event.lengthComputable ? event.loaded / event.total : 0), event.loaded, event.total, xhr, event);\r\n\t\t\t\t};\r\n\t\t\t\txhr.onerror = FAILFUNC;\r\n\t\t\t\txhr.onabort = ABORTFUNC;\r\n\t\t\t\txhr.ontimeout = TIMEOUTFUNC;\r\n\r\n\t\t\t\txhr.onload = (event) => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet c = parseInt(xhr.status / 100, 10);\r\n\t\t\r\n\t\t\t\t\t// Bad Response\r\n\t\t\t\t\tif ((c === 4 || c === 5) && !opt.responseIsSuccess) {\r\n\t\t\t\t\t\tthis.failureFunc && this.failureFunc(xhr.status, xhr.statusText, xhr, event);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this.successFunc) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tconst CHARSET = 'charset=';\r\n\t\t\t\t\t\t\tconst responseContentType = xhr.getResponseHeader('Content-Type');\r\n\t\t\r\n\t\t\t\t\t\t\tconst idx = responseContentType.indexOf(';');\r\n\t\t\t\t\t\t\tconst mimeType = idx >= 0 ? responseContentType.substring(0, idx) : responseContentType;\r\n\t\t\r\n\t\t\t\t\t\t\tconst charsetIdx = responseContentType.indexOf(CHARSET);\r\n\t\t\t\t\t\t\tconst charsetType = charsetIdx >= 0 ? responseContentType.substring(charsetIdx + CHARSET.length, responseContentType.length).trim() : null;\r\n\t\t\r\n\t\t\t\t\t\t\tconst typeName = opt.responseType || mimeType;\r\n\t\t\r\n\t\t\t\t\t\t\tconst res = responseTypeHandlers[typeName] \r\n\t\t\t\t\t\t\t\t? responseTypeHandlers[typeName](xhr.response, xhr.responseType, mimeType, charsetType, responseContentType)\r\n\t\t\t\t\t\t\t\t: xhr.response;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.successFunc(res, xhr.status, xhr.statusText, xhr, event);\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\tthis.failureFunc && this.failureFunc(null, null, xhr, event, err);\r\n\t\t\t\t\t\t\tthis.alwaysFunc && this.alwaysFunc(event, xhr);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\txhr.onloadend = (event) => {\r\n\t\t\t\t\tthis.alwaysFunc && this.alwaysFunc(xhr, event);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Delay send - user may be setting fields on this object, await event yield.\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tthis.beforeSendFunc && this.beforeSendFunc(xhr);\r\n\t\t\t\t\t\txhr.send(body);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tthis.failureFunc && this.failureFunc(null, null, xhr, null, err);\r\n\t\t\t\t\t\tthis.alwaysFunc && this.alwaysFunc(null, xhr);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 0);\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to invoke right before the request is sent.\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\txhr (XMLHttpResponse): the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\tbeforeSend(func) {\r\n\t\t\t\tthis.beforeSendFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to invoke right before loading starts.\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\txhr (XMLHttpResponse): the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\tstart(func) {\r\n\t\t\t\tthis.startFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to invoke on progress updates (if supported).\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\tpercent (Number): percent progress.\r\n\t\t\t *\t\tloaded (Number): loaded amount progress (if length is computable - may be undefined if not).\r\n\t\t\t *\t\ttotal (Number): total amount progress (if length is computable - may be undefined if not).\r\n\t\t\t *\t\txhr (XMLHttpResponse): the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\tprogress(func) {\r\n\t\t\t\tthis.progressFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to invoke on successful finish.\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\tdata (Varies): the returned data, altered by expected type.\r\n\t\t\t *\t\tstatus (Number): the status code.\r\n\t\t\t *\t\tstatusText (string): the status text.\r\n\t\t\t *\t\txhr (XMLHttpResponse): the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\tsuccess(func) {\r\n\t\t\t\tthis.successFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to invoke right before uploading starts.\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\txhr (XMLHttpResponse) the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\tuploadStart(func) {\r\n\t\t\t\tthis.uploadStartFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to invoke on upload progress updates (if supported).\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\tpercent (Number): percent progress.\r\n\t\t\t *\t\tloaded (Number): loaded amount progress (if length is computable - may be undefined if not).\r\n\t\t\t *\t\ttotal (Number): total amount progress (if length is computable - may be undefined if not).\r\n\t\t\t *\t\txhr (XMLHttpResponse): the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\tuploadProgress(func) {\r\n\t\t\t\tthis.uploadProgressFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to invoke on successful upload completion.\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\txhr (XMLHttpResponse): the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\tuploadSuccess(func) {\r\n\t\t\t\tthis.uploadSuccessFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to invoke on upload end.\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\txhr (XMLHttpResponse): the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\tuploadFinished(func) {\r\n\t\t\t\tthis.uploadEndFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to invoke on failure (and upload failure).\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\tstatus (Number): the status code (can be null if thrown error).\r\n\t\t\t *\t\tstatusText (string): the status text (can be null if thrown error).\r\n\t\t\t *\t\txhr (XMLHttpResponse): the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t *\t\terr (Error): JS error object if error.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\tfailure(func) {\r\n\t\t\t\tthis.failureFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to always invoke, be it success, failure, or aborted call.\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\txhr (XMLHttpResponse): the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\talways(func) {\r\n\t\t\t\tthis.alwaysFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to invoke on abort (and upload abort).\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\txhr (XMLHttpResponse): the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\tabort(func) {\r\n\t\t\t\tthis.abortFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the function to invoke on timeout (and upload timeout).\r\n\t\t\t * @param {Function} func a function that takes:\r\n\t\t\t *\t\txhr (XMLHttpResponse): the actual XMLHttpResponse object.\r\n\t\t\t *\t\tevent (ProgressEvent): the actual Event object.\r\n\t\t\t * @returns {AJAXCall} itself for chaining.\r\n\t\t\t */\r\n\t\t\ttimeout(func) {\r\n\t\t\t\tthis.timeoutFunc = func;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tAJAXCall.prototype.responseTypeHandlers = {};\r\n\r\n\t\t/********************************************************************/\r\n\r\n\t\tclass AppState {\r\n\t\t\tconstructor(stateApplierFunctionMap) {\r\n\t\t\t\tif (!isObject(stateApplierFunctionMap)) {\r\n\t\t\t\t\tthrow new Error(\"Expected object for state applier.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.stateApplierFunctionMap = stateApplierFunctionMap;\r\n\r\n\t\t\t\t// Component state.\r\n\t\t\t\tthis.state = {};\r\n\t\t\t\tthis.nextStateChanges = {};\r\n\t\t\t\tthis.applierTimeout = null;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets one or more fields on the state, but doesn't attempt to apply\r\n\t\t\t * to the state functions.\r\n\t\t\t * This will merge the incoming object with the current state.\r\n\t\t\t * @param {Object} nextState the new state changes.\r\n\t\t\t * @returns {AppState} this AppState object.\r\n\t\t\t */\r\n\t\t \tsetState(nextState) {\r\n\t\t\t\tif (!isObject(nextState)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\teach(nextState, (value, key) => {\r\n\t\t\t\t\tthis.state[key] = value;\r\n\t\t\t\t});\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\t// Triggers the timeout apply.\r\n\t\t\t__timeoutApply() {\r\n\t\t\t\tif (this.applierTimeout != null) {\r\n\t\t\t\t\tclearTimeout(this.applierTimeout);\r\n\t\t\t\t\tthis.applierTimeout = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.applierTimeout = setTimeout(() => {\r\n\t\t\t\t\teach(this.nextStateChanges, (value, key) => {\r\n\t\t\t\t\t\tif (this.stateApplierFunctionMap[key]) {\r\n\t\t\t\t\t\t\tthis.stateApplierFunctionMap[key](value, this.state[key]);\r\n\t\t\t\t\t\t\tthis.state[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.nextStateChanges = {};\r\n\t\t\t\t}, 0);\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Applies a state object to this state manager.\r\n\t\t\t * This will merge the incoming object with the current state, and\r\n\t\t\t * send the changed contents to the state applier function map for applying.\r\n\t\t\t * This function can be called many times in one event - all accumulated changes\r\n\t\t\t * get applied once this event yields.\r\n\t\t\t * @param {Object} nextState the new state changes.\r\n\t\t\t * @returns {AppState} this AppState object.\r\n\t\t\t */\r\n\t\t\tapplyState(nextState) {\r\n\t\t\t\tif (!isObject(nextState)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\teach(nextState, (value, key) => {\r\n\t\t\t\t\tif (this.state[key] !== value) {\r\n\t\t\t\t\t\tthis.nextStateChanges[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// Apply after event yield - many calls may accumulate changes.\r\n\t\t\t\tthis.__timeoutApply();\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Forces a refresh on a state member as though it changed.\r\n\t\t\t * Useful for \"deep\" changes on state members like objects and arrays that\r\n\t\t\t * may not be detected at the member level.\r\n\t\t\t * This function can be called many times in one event - all accumulated changes\r\n\t\t\t * get applied once this event yields.\r\n\t\t\t * @param {String...} arguments a series of member names.\r\n\t\t\t * @returns {AppState} this AppState object.\r\n\t\t\t */\r\n\t\t\ttouchState(/* memberName... */) {\r\n\t\t\t\teach(arguments, (memberName) => {\r\n\t\t\t\t\tif (this.stateApplierFunctionMap[memberName]) {\r\n\t\t\t\t\t\tthis.nextStateChanges[memberName] = this.state[memberName];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// Apply after event yield - many calls may accumulate changes.\r\n\t\t\t\tthis.__timeoutApply();\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Binds an event handler to a state applier.\r\n\t\t\t * This just facilitates some shorthanding.\r\n\t\t\t * @param {string} eventName the element event name (e.g. \"click\", \"mouseover\", etc.).\r\n\t\t\t * @param {*} selector If SelectionGroup object, use that object. If String, use this as a selector for elements. Else, the element to bind to.\r\n\t\t\t * @param {Object} nextState if function, the function must return an object to pass to applyState. First parameter is event object, Second is the current state object.\r\n\t\t\t * \t\tIf object, it is the object to directly pass to applyState.\r\n\t\t\t * @returns {AppState} this AppState object.\r\n\t\t\t */\r\n\t\t\tbindStateEvent(eventName, selector, nextState) {\r\n\t\t\t\tconst self = this;\r\n\r\n\t\t\t\tlet group = isType(selector, \"SelectionGroup\")\r\n\t\t\t\t\t? selector\r\n\t\t\t\t\t: DOMJunk(selector)\r\n\t\t\t\t;\r\n\r\n\t\t\t\tgroup.attach(eventName, function(event) {\r\n\t\t\t\t\tif (isFunction(nextState)) {\r\n\t\t\t\t\t\tself.applyState(nextState(event, self.state));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.applyState(nextState);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/********************************************************************/\r\n\t\t/** Commands                                                       **/\r\n\t\t/********************************************************************/\r\n\r\n\t\t/**\r\n\t\t * Calls a function on each element in the SelectionGroup.\r\n\t\t * Each element is passed to the function as [this] and the first \r\n\t\t * parameter (for fat-arrow lambdas that preserve [this]).\r\n\t\t * @param {function} func the function to call for each element.\r\n\t\t */\r\n\t\tconst $each = function(func) {\r\n\t\t\tfunc.apply(this, [this]);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Performs a document query on the first DOM element in the SelectionGroup, \r\n\t\t * and returns a new SelectionGroup of the result.\r\n\t\t * @param {string} query the CSS/document query.\r\n\t\t * @param {boolean} one (optional) if true, return the first match.\r\n\t\t * @returns {SelectionGroup} the new SelectionGroup of matching elements.\r\n\t\t */\r\n\t\tconst $find = function(query, one) {\r\n\t\t\treturn !!one \r\n\t\t\t\t? new SelectionGroup(this.querySelector(query)) \r\n\t\t\t\t: new SelectionGroup(this.querySelectorAll(query))\r\n\t\t\t;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Gets a child of the first DOM element in the SelectionGroup.\r\n\t\t * @param {number} index the index of the child element to fetch.\r\n\t\t * @returns {SelectionGroup} the new SelectionGroup with the single child.\r\n\t\t */\r\n\t\tconst $child = function(index) {\r\n\t\t\treturn new SelectionGroup(this.children[index], true);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Gets all immediate children of the first DOM element in the SelectionGroup.\r\n\t\t * @returns {SelectionGroup} the new SelectionGroup with the children.\r\n\t\t */\r\n\t\tconst $children = function() {\r\n\t\t\treturn new SelectionGroup(this.children);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Gets the immediate parent of the first DOM element in the SelectionGroup.\r\n\t\t * @returns {SelectionGroup} the new SelectionGroup with the parent element.\r\n\t\t */\r\n\t\tconst $parent = function() {\r\n\t\t\treturn new SelectionGroup(this.parentElement, true);\r\n\t\t};\r\n\r\n\t\t/********************************************************************/\r\n\r\n\t\t/**\r\n\t\t * Removes all of the children in each DOM element in the SelectionGroup.\r\n\t\t */\r\n\t\tconst $clear = function() {\r\n\t\t\twhile (this.firstChild) {\r\n\t\t\t\tthis.removeChild(this.firstChild);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Appends one or more child elements to all of the children in each DOM element in the SelectionGroup.\r\n\t\t * If elements is an array, each child in the array is appended.\r\n\t\t * If elements is a Document, that Document's children are appended.\r\n\t\t * Otherwise, elements is considered to be one element, and it is appended.\r\n\t\t * @param {*} elements one or more children to add.\r\n\t\t */\r\n\t\tconst $append = function(elements) {\r\n\t\t\tif (isArray(elements)) {\r\n\t\t\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\t\tthis.appendChild(elements[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (elements instanceof Document) {\r\n\t\t\t\tfor (let i = 0; i < elements.children.length; i++) {\r\n\t\t\t\t\tthis.appendChild(elements.children[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.appendChild(elements);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Removes all of the children in each DOM element in the SelectionGroup, and\r\n\t\t * fills them with a new list of children.\r\n\t\t * Equivalent to: .clear().append(elements)\r\n\t\t * @param {*} elements one or more children to add.\r\n\t\t */\r\n\t\tconst $refill = function(elements) {\r\n\t\t\t(new SelectionGroup(this)).clear().append(elements);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Removes all of the children in each DOM element in the SelectionGroup, and\r\n\t\t * then, using the provided array of data, fills them with children generated\r\n\t\t * from the provided array.\r\n\t\t * If a non-truthy value is returned for an array element, it is not added.\r\n\t\t * @param {Array} arr the array of objects. Can be an object - they are both iterated on.\r\n\t\t * @param {Function} generatorFunc the element generator function. \r\n\t\t * \t\tFirst parameter is the array element to use, second is the array/map key.\r\n\t\t */\r\n\t\tconst $refillList = function(arr, generatorFunc) {\r\n\t\t\tconst elements = [];\r\n\t\t\teach(arr, (v, k) => {\r\n\t\t\t\tconst gen = generatorFunc(v, k);\r\n\t\t\t\tif (gen) {\r\n\t\t\t\t\telements.push(gen);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t(new SelectionGroup(this)).clear().append(elements);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Gets/Sets the inner HTML.\r\n\t\t * If HTML is provided, the inner HTML is set.\r\n\t\t * If it is undefined, this will return the inner HTML of the first DOM element in the SelectionGroup.\r\n\t\t * @param {string} data HTML data to set.\r\n\t\t */\r\n\t\tconst $html = function(data) {\r\n\t\t\tif (isUndefined(data)) {\r\n\t\t\t\treturn this.innerHTML;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.innerHTML = data;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Gets/Sets the inner text.\r\n\t\t * If text is provided, the inner HTML is set to the text. Special characters will be converted to entities.\r\n\t\t * If it is undefined, this will return the inner text of the first DOM element in the SelectionGroup.\r\n\t\t * @param {string} data HTML data to set.\r\n\t\t */\r\n\t\tconst $text = function(text) {\r\n\t\t\tif (isUndefined(text)) {\r\n\t\t\t\treturn this.innerText;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.innerHTML = text.replace(HTML_SPECIAL, (m) => ENTITIES[m]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/********************************************************************/\r\n\r\n\t\t/**\r\n\t\t * Sets a member on each element of the SelectionGroup to a value.\r\n\t\t * @param {string} memberName the member name.\r\n\t\t * @param {*} value the value.\r\n\t\t */\r\n\t\tconst $set = function(memberName, value) {\r\n\t\t\tthis[memberName] = value;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Merges several members into each object's members in the SelectionGroup.\r\n\t\t * @param {object} memberMap the mapping of member names to values.\r\n\t\t */\r\n\t\tconst $merge = function(memberMap) {\r\n\t\t\teach(memberMap, (v, k) => {\r\n\t\t\t\tthis[k] = v;\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/********************************************************************/\r\n\r\n\t\t/**\r\n\t\t * Merges a set of CSS attributes into each element's local style in the SelectionGroup, or fetches them from the first.\r\n\t\t * If input is undefined, this will return a copied object of this element's local styles.\r\n\t\t * If input is an array of CSS attribute names, this will return an object of this element's corresponding local style values.\r\n\t\t * If input is a CSS attribute name, this will return this element's corresponding local style values.\r\n\t\t * If input is an object, this sets each element's local style values to the provided CSS attribute names and values.\r\n\t\t * @param {*} input the input value.\r\n\t\t */\r\n\t\tconst $style = function(input) {\r\n\t\t\tif (isUndefined(input)) {\r\n\t\t\t\treturn merge({}, this.style);\r\n\t\t\t}\r\n\t\t\telse if (isArray(input)) {\r\n\t\t\t\tlet out = {};\r\n\t\t\t\teach(input, (s) => {\r\n\t\t\t\t\tout[s] = this.style[s];\r\n\t\t\t\t});\r\n\t\t\t\treturn out;\r\n\t\t\t}\r\n\t\t\telse if (isObject(input)) {\r\n\t\t\t\teach(input, (v, k) => {\r\n\t\t\t\t\tthis.style[k] = v;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.style[input];\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Merges a set of DOM attributes into each element's attributes in the SelectionGroup, or fetches them from the first.\r\n\t\t * If input is undefined, this will return an object of this element's attribute values.\r\n\t\t * If input is an array of attribute names, this will return an object of this element's corresponding attribute values.\r\n\t\t * If input is an attribute name, this will return this element's corresponding attribute value.\r\n\t\t * If input is an object, this sets each element's attributes to the provided corresponding values.\r\n\t\t * @param {*} input the input value.\r\n\t\t */\r\n\t\tconst $attr = function(input) {\r\n\t\t\tif (isUndefined(input)) {\r\n\t\t\t\tlet out = {};\r\n\t\t\t\tconst names = this.getAttributeNames();\r\n\t\t\t\tfor (let i = 0; i < names.length; i++) {\r\n\t\t\t\t\tout[names[i]] = this.getAttribute(names[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn out;\r\n\t\t\t}\r\n\t\t\telse if (isArray(input)) {\r\n\t\t\t\tlet out = {};\r\n\t\t\t\teach(input, (a) => {\r\n\t\t\t\t\tout[a] = this.getAttribute(a);\r\n\t\t\t\t});\r\n\t\t\t\treturn out;\r\n\t\t\t}\r\n\t\t\telse if (isObject(input)) {\r\n\t\t\t\teach(input, (v, k) => {\r\n\t\t\t\t\tthis.setAttribute(k, v);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.getAttribute(input);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Adds a set of CSS classes to each element in the SelectionGroup.\r\n\t\t * @param {string} varargs... the vararg list of class names to add to each element.\r\n\t\t */\r\n\t\tconst $classAdd = function() {\r\n\t\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\t\tconst classSet = fold({}, (obj) => {\r\n\t\t\t\tclasses.map((c) => {obj[c] = true;});\r\n\t\t\t});\r\n\t\t\tfor (let i = 0; i < arguments.length; i++) {\r\n\t\t\t\tif (!classSet[arguments[i]]) {\r\n\t\t\t\t\tclasses.push(arguments[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.className = classes.join(\" \");\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Removes a set of CSS classes from each element in the SelectionGroup.\r\n\t\t * @param {string} varargs... the vararg list of class names to remove from each element.\r\n\t\t */\r\n\t\tconst $classRemove = function() {\r\n\t\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\t\tconst remset = {};\r\n\t\t\tfor (let i = 0; i < arguments.length; i++) {\r\n\t\t\t\tremset[arguments[i]] = true;\r\n\t\t\t}\r\n\t\t\tconst out = [];\r\n\t\t\teach(classes, (c) => {\r\n\t\t\t\tif (!remset[c]) {\r\n\t\t\t\t\tout.push(c);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (isBlank(out))\r\n\t\t\t\tthis.removeAttribute('class');\r\n\t\t\telse\r\n\t\t\t\tthis.className = out.join(\" \");\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Toggles the presence of a set of CSS classes in each element in the SelectionGroup.\r\n\t\t * If the class exists, it is removed, and if the class does not exist, it is added.\r\n\t\t * @param {string} varargs... the vararg list of class names to toggle in each element.\r\n\t\t */\r\n\t\tconst $classToggle = function() {\r\n\t\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\t\tconst classSet = fold({}, (obj) => {\r\n\t\t\t\tclasses.map((c) => {obj[c] = true;});\r\n\t\t\t});\r\n\t\t\tconst argSet = fold({}, (obj) => {\r\n\t\t\t\teach(arguments, (c) => {\r\n\t\t\t\t\tobj[c] = true;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst out = [];\r\n\r\n\t\t\tfor (let i = 0; i < classes.length; i++) {\r\n\t\t\t\tlet name = classes[i];\r\n\t\t\t\tif (!argSet[name]) {\r\n\t\t\t\t\tout.push(name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < arguments.length; i++) {\r\n\t\t\t\tlet name = arguments[i];\r\n\t\t\t\tif (!classSet[name]) {\r\n\t\t\t\t\tout.push(name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isBlank(out))\r\n\t\t\t\tthis.removeAttribute('class');\r\n\t\t\telse\r\n\t\t\t\tthis.className = out.join(\" \");\r\n\t\t};\r\n\r\n\t\t/********************************************************************/\r\n\r\n\t\t/**\r\n\t\t * Scrapes a form element for its values and returns an object of the name-value pairings of the form fields,\r\n\t\t * or an object mapping (name/id for key).\r\n\t\t * The 'id' attribute is used if 'name' is not provided. Unnamed, disabled, or unchecked form elements are not scraped.\r\n\t\t * @param {function} callback (optional) if provided, call this function with one argument: the data returned.\r\n\t\t * @returns an object of the name/value pairings of the form fields, or the selection group if a callback was provided.\r\n\t\t */\r\n\t\tconst $form = function(callback) {\r\n\t\t\t\r\n\t\t\tif (!isUndefined(callback) && !isFunction(callback))\r\n\t\t\t\tthrow new Error(\"Callback function for formData must be a function!\");\r\n\t\t\t\r\n\t\t\tlet formData = {};\r\n\r\n\t\t\tconst GATHERFUNC = function() {\r\n\t\t\t\tlet memberName = this.getAttribute('name');\r\n\t\t\t\tif (!!memberName) {\r\n\t\t\t\t\tif (!matches(this, ':disabled')) {\r\n\t\t\t\t\t\tconst t = this.getAttribute('type');\r\n\t\t\t\t\t\tlet v = (t === 'checkbox' || t === 'radio') \r\n\t\t\t\t\t\t\t? matches(this, ':checked') && this.value\r\n\t\t\t\t\t\t\t: this.value;\r\n\t\t\t\t\t\tif (v) {\r\n\t\t\t\t\t\t\tif (isObject(formData[memberName])) {\r\n\t\t\t\t\t\t\t\tformData[memberName].push(v);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (formData[memberName]) {\r\n\t\t\t\t\t\t\t\tlet arr = [formData[memberName], v];\r\n\t\t\t\t\t\t\t\tformData[memberName] = arr;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tformData[memberName] = v;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t(new SelectionGroup(this)).find('input, textarea, select').each(GATHERFUNC);\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallback(formData);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn formData;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/********************************************************************/\r\n\r\n\t\tconst EVENTNAME = (name) => ('on' + name.toLowerCase());\r\n\r\n\t\t/**\r\n\t\t * Attaches a function to a DOM element event handler (the \"on\" members).\r\n\t\t * The function attached is wrapped in a different function that\r\n\t\t * parses out the event target and passes it to the function as [this].\r\n\t\t * @param {string} eventName the event name (for example, if \"mouseover\", attaches to \"onmouseover\").\r\n\t\t * @param {Function} func the function to wrap (the function's [this] becomes the element, and the function's first arg is the event. Cannot be a lambda closure).\r\n\t\t */\r\n\t\tconst $attach = function(eventName, func) {\r\n\t\t\tconst self = this;\r\n\t\t\tthis[EVENTNAME(eventName)] = func ? function(event) {\r\n\t\t\t\tfunc.apply(self, [event]);\r\n\t\t\t} : null;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Detaches a function from a DOM element event handler (the \"on\" members).\r\n\t\t * @param {string} eventName the event name (for example, if \"mouseover\", nullifies \"onmouseover\").\r\n\t\t */\r\n\t\tconst $detach = function(eventName) {\r\n\t\t\tthis[EVENTNAME(eventName)] = null;\r\n\t\t};\r\n\r\n\t\t/********************************************************************/\r\n\r\n\t\t/**\r\n\t\t * Wraps a single element in the SelectionGroup in a new SelectionGroup.\r\n\t\t * @param {number} index the index of the selected element.\r\n\t\t * @returns {SelectionGroup} the new SelectionGroup of matching elements.\r\n\t\t */\r\n\t\tconst $get = function(index) {\r\n\t\t\treturn new SelectionGroup(this[index]);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Wraps the first element in the SelectionGroup in a new SelectionGroup.\r\n\t\t * @returns {SelectionGroup} the new SelectionGroup.\r\n\t\t */\r\n\t\tconst $first = function() {\r\n\t\t\treturn new SelectionGroup(this[0]);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Wraps the last element in the SelectionGroup in a new SelectionGroup.\r\n\t\t * @returns {SelectionGroup} the new SelectionGroup.\r\n\t\t */\r\n\t\tconst $last = function() {\r\n\t\t\treturn new SelectionGroup(this[this.length - 1]);\r\n\t\t};\r\n\r\n\t\t/********************************************************************/\r\n\r\n\t\t/**\r\n\t\t * Takes a single object where the keys are selector queries to run via .find() and\r\n\t\t * corresponding values are functions to call on the selection results via .each().\r\n\t\t * @param {object} selectorMap the mapping of selector strings to functions.\r\n\t\t */\r\n\t\tconst $apply = function(selectorMap) {\r\n\t\t\teach(selectorMap, (v, k) => {\r\n\t\t\t\tthis.find(k).each(v);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/********************************************************************/\r\n\r\n\t\t/**\r\n\t\t * Start an AJAX call.\r\n\t\t * @param {*} param \r\n\t\t * (string) URL:\r\n\t\t *\t\tMakes a GET request with the provided URL.\r\n\t\t *\t\tDefault return handling.\r\n\t\t * (Object) map of options:\r\n\t\t *\t\tmethod (string): HTTP method.\r\n\t\t *\t\turl (string): target URL.\r\n\t\t *\t\tdata (VARIES): content to send:\r\n\t\t *\t\t\t(Object) \r\n\t\t *\t\t\t\tIf GET/DELETE, turned into params. \r\n\t\t *\t\t\t\tIf POST/PUT/PATCH, submitted in body and reformatted depending on dataType.\r\n\t\t *\t\t\t(string) \r\n\t\t *\t\t\t\tIf GET/DELETE, appended as-is as query. \r\n\t\t *\t\t\t\tIf POST/PUT/PATCH, submitted as text, but dataType is now a MIME.\r\n\t\t *\t\t\t(ArrayBuffer) \r\n\t\t *\t\t\t\tIf GET/DELETE, discarded. \r\n\t\t *\t\t\t\tIf POST/PUT/PATCH, submitted as-is, but dataType is now a MIME.\r\n\t\t *\t\t\t(ArrayBufferView) \r\n\t\t *\t\t\t\tIf GET/DELETE, discarded. \r\n\t\t *\t\t\t\tIf POST/PUT/PATCH, submitted as-is, but dataType is now a MIME.\r\n\t\t *\t\t\t(Blob) \r\n\t\t *\t\t\t\tIf GET/DELETE, discarded. \r\n\t\t *\t\t\t\tIf POST/PUT/PATCH, submitted as-is, but dataType is now a MIME.\r\n\t\t *\t\t\t(Document) \r\n\t\t *\t\t\t\tIf GET/DELETE, discarded. \r\n\t\t *\t\t\t\tIf POST/PUT/PATCH, submitted as-is, but dataType is overridden to 'text/html'\r\n\t\t *\t\t\t(XMLDocument) \r\n\t\t *\t\t\t\tIf GET/DELETE, discarded. \r\n\t\t *\t\t\t\tIf POST/PUT/PATCH, submitted as-is, but dataType is overridden to 'application/xml'\r\n\t\t *\t\t\t(HTMLDocument) \r\n\t\t *\t\t\t\tIf GET/DELETE, discarded. \r\n\t\t *\t\t\t\tIf POST/PUT/PATCH, submitted as-is, but dataType is overridden to 'text/html'\r\n\t\t *\t\t\t(FormData) \r\n\t\t *\t\t\t\tIf GET/DELETE, discarded. \r\n\t\t *\t\t\t\tIf POST/PUT/PATCH, submitted as-is, but dataType is overridden to 'multipart/form-data'\r\n\t\t *\t\tdataType (string): If POST/PUT, the type of data referred to as \"data\". Usually, this is a MIME type.\r\n\t\t *\t\t\t'text': Content-Type is set to 'text/plain'. \r\n\t\t *\t\t\t\tIf data is an Object, JSON-stringify. \r\n\t\t *\t\t\t\tIf text, no conversion.\r\n\t\t *\t\t\t'form': Content-Type is set to 'application/x-www-form-urlencoded'. \r\n\t\t *\t\t\t\tIf data is an Object, content is converted to a query string. \r\n\t\t *\t\t\t\tIf text, no conversion.\r\n\t\t *\t\t\t'json': Content-Type is set to 'application/json'. \r\n\t\t *\t\t\t\tIf data is an Object, JSON-stringify. \r\n\t\t *\t\t\t\tIf text, no conversion.\r\n\t\t *\t\t\tElse, 'application/octet-stream'\r\n\t\t *\t\tresponseType (string): \r\n\t\t *\t\t\tWhat to expect the data back as (either response handler typename or MIMEtype override).\r\n\t\t *\t\t\tElse, default is null, which will attempt to convert based on content MIME. If that fails, return response as-is.\r\n\t\t *\t\tresponseIsSuccess (Boolean): If true, 4XX and 5XX is considered \"success.\", else 4XX and 5XX is failure.\r\n\t\t *\t\theaders (Object): Map of HTTP Header name to value.\r\n\t\t *\t\tasync (Boolean): If true, asynchronus. Else, wait until completion.\r\n\t\t *\t\tuser (string): username for authorization.\r\n\t\t *\t\tpassword (string): password for authorization.\r\n\t\t * @returns {AJAXCall} an AJAXCall instance.\r\n\t\t */\r\n\t\tconst $ajax = function(param) {\r\n\t\t\tlet options = null;\r\n\t\t\t\r\n\t\t\tif (isString(param)) {\r\n\t\t\t\toptions = {\r\n\t\t\t\t\t\"method\": 'GET', \r\n\t\t\t\t\t\"url\": param\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse if (isObject(param)) {\r\n\t\t\t\toptions = param;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!options.method) {\r\n\t\t\t\toptions.method = 'GET';\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\toptions.method = options.method.toUpperCase();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toptions.url = options.url || '#';\r\n\t\t\t\r\n\t\t\tlet opt = merge(AJAX_OPTIONS_DEFAULTS, options);\r\n\r\n\t\t\tlet url = opt.url;\r\n\t\t\tlet body = null;\r\n\t\t\t\r\n\t\t\tif (!isNull(opt.data) && !isUndefined(opt.data)) {\r\n\t\t\t\tif (isObject(opt.data)) {\r\n\t\t\t\t\tif (opt.method === 'GET' || opt.method === 'DELETE') {\r\n\t\t\t\t\t\turl = url + (url.indexOf('?') >= 0 ? '&' : '?') + queryString(opt.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (opt.dataType === 'text') {\r\n\t\t\t\t\t\t\tbody = queryString(opt.data);\r\n\t\t\t\t\t\t\topt.headers['Content-Type'] = 'text/plain';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (opt.dataType === 'json') {\r\n\t\t\t\t\t\t\tbody = JSON.stringify(opt.data);\r\n\t\t\t\t\t\t\topt.headers['Content-Type'] = 'application/json';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (opt.dataType === 'form') {\r\n\t\t\t\t\t\t\tbody = queryString(opt.data);\r\n\t\t\t\t\t\t\topt.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (isString(opt.data) || isType(opt.data, 'DOMString')) {\r\n\t\t\t\t\tif (opt.method === 'GET' || opt.method === 'DELETE') {\r\n\t\t\t\t\t\turl = url + qs;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbody = opt.data;\r\n\t\t\t\t\t\topt.headers['Content-Type'] = opt.dataType || 'application/octet-stream';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (isType(opt.data, 'ArrayBuffer')) {\r\n\t\t\t\t\tif (!(opt.method === 'GET' || opt.method === 'DELETE')) {\r\n\t\t\t\t\t\tbody = opt.data;\r\n\t\t\t\t\t\topt.headers['Content-Type'] = opt.dataType || 'application/octet-stream';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (isType(opt.data, 'ArrayBufferView')) {\r\n\t\t\t\t\tif (!(opt.method === 'GET' || opt.method === 'DELETE')) {\r\n\t\t\t\t\t\tbody = opt.data;\r\n\t\t\t\t\t\topt.headers['Content-Type'] = opt.dataType || 'application/octet-stream';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (isType(opt.data, 'Blob')) {\r\n\t\t\t\t\tif (!(opt.method === 'GET' || opt.method === 'DELETE')) {\r\n\t\t\t\t\t\tbody = opt.data;\r\n\t\t\t\t\t\topt.headers['Content-Type'] = opt.dataType || 'application/octet-stream';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (isType(opt.data, 'Document') || isType(opt.data, 'HTMLDocument')) {\r\n\t\t\t\t\tif (!(opt.method === 'GET' || opt.method === 'DELETE')) {\r\n\t\t\t\t\t\tbody = opt.data;\r\n\t\t\t\t\t\topt.headers['Content-Type'] = 'text/html';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (isType(opt.data, 'XMLDocument')) {\r\n\t\t\t\t\tif (!(opt.method === 'GET' || opt.method === 'DELETE')) {\r\n\t\t\t\t\t\tbody = opt.data;\r\n\t\t\t\t\t\topt.headers['Content-Type'] = 'application/xml';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (isType(opt.data, 'FormData')) {\r\n\t\t\t\t\tif (!(opt.method === 'GET' || opt.method === 'DELETE')) {\r\n\t\t\t\t\t\tbody = opt.data;\r\n\t\t\t\t\t\topt.headers['Content-Type'] = 'multipart/form-data';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn new AJAXCall(url, opt, body);\r\n\t\t};\r\n\r\n\t\tconst $jsonAjax = function(method, url, data, headers) {\r\n\t\t\treturn $ajax({\r\n\t\t\t\t\"method\": method, \r\n\t\t\t\t\"headers\": headers,\r\n\t\t\t\t\"url\": url,\r\n\t\t\t\t\"data\": data,\r\n\t\t\t\t\"dataType\": 'json',\r\n\t\t\t\t\"responseType\": 'json'\t\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tconst $ajaxTextHandler = function (responseContent) {\r\n\t\t\tif (!Util.isString(responseContent)) {\r\n\t\t\t\treturn Object.prototype.toString.call(responseContent);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn responseContent;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst $ajaxXMLHandler = function(responseContent, _, mimeType) {\r\n\t\t\treturn (new DOMParser()).parseFromString(responseContent, mimeType);\r\n\t\t};\r\n\r\n\t\tconst $ajaxJSONHandler = function(responseContent) {\r\n\t\t\treturn JSON.parse(responseContent);\r\n\t\t};\r\n\r\n\t\t/********************************************************************/\r\n\t\t/** Exported                                                       **/\r\n\t\t/********************************************************************/\r\n\r\n\t\t/**\r\n\t \t * Performs a document query, returning the list of matches as a SelectionGroup.\r\n\t\t * If the first argument is undefined or null, an empty SelectionGroup is returned.\r\n\t\t * If the first argument is a string, it is treated as a CSS selector, and the elements that match are in the SelectionGroup. \r\n\t\t * Anything else, and the SelectionGroup contains that object, or treats it like a group if it is an array.\r\n\t\t * @param {*} query the CSS/document query.\r\n\t\t * @param {boolean} one (optional) if true, and CSS selector, return only the first match.\r\n\t\t * @returns {SelectionGroup} the matching elements, encapsulated.\r\n\t\t */\r\n\t\tconst DOMJunk = new function() {\r\n\t\t\treturn function(query, one) {\r\n\t\t\t\tif (isUndefined(query) || isNull(query)) {\r\n\t\t\t\t\treturn new SelectionGroup([]);\r\n\t\t\t\t}\r\n\t\t\t\telse if (isString(query)) {\r\n\t\t\t\t\treturn !!one \r\n\t\t\t\t\t\t? new SelectionGroup(document.querySelector(query))\r\n\t\t\t\t\t\t: new SelectionGroup(document.querySelectorAll(query))\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn new SelectionGroup(query)\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Adds a wrapped function to the SelectionGroup prototype.\r\n\t\t * The function's [this] keyword becomes each element.\r\n\t\t * When the function is called, it is called once per element, unless the function returns a value.\r\n\t\t * If the function returns a value (not undefined), it is returned as the result.\r\n\t\t * If it never returned a function, the SelectionGroup instance is returned as the result.\r\n\t\t * @param {string} name the name of the function to add to all query results.\r\n\t\t * @param {Function} func the function itself (cannot be a lambda closure).\r\n\t\t */\r\n\t\tDOMJunk.extend = function(name, func) {\r\n\t\t\tSelectionGroup.prototype[name] = function() {\r\n\t\t\t\tlet retval;\r\n\t\t\t\tfor (let i = 0; i < this.length && isUndefined(retval); i++) {\r\n\t\t\t\t\tretval = func.apply(this[i], arguments);\r\n\t\t\t\t}\r\n\t\t\t\treturn isUndefined(retval) ? this : retval;\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Adds a wrapped function to the SelectionGroup prototype.\r\n\t\t * The function's [this] keyword becomes the SelectionGroup itself.\r\n\t\t * @param {string} name the name of the function to add.\r\n\t\t * @param {Function} func the function to add (cannot be a lambda closure).\r\n\t\t */\r\n\t\tDOMJunk.extendSelection = function(name, func) {\r\n\t\t\tSelectionGroup.prototype[name] = function() {\r\n\t\t\t\treturn func.apply(this, arguments);\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Adds/sets an AJAX response type handler.\r\n\t\t * The handled type is either the name of an expected type passed to options,\r\n\t\t * or the MIME-Type of the response body.\r\n\t\t * @param {string} handledTypeName the name of type.\r\n\t\t * @param {Function} func the handler function.\r\n\t\t */\r\n\t\tDOMJunk.extendAJAX = function(handledTypeName, func) {\r\n\t\t\tAJAXCall.prototype.responseTypeHandlers[handledTypeName] = func;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Auto-selects a series of selection groups using an object that maps\r\n\t\t * member name to selector query or function that returns a SelectionGroup.\r\n\t\t * @param {Object} memberSet a map of member name to selector.\r\n\t\t * \t\tIf the selector is a string, it is used as a selector to build the group.\r\n\t\t * \t\tElse if it's a function, it is called to return the member's value.\r\n\t\t * \t\tElse, it is the member's value.\r\n\t\t * @returns a new object that is a mapping of name to SelectionGroup.\r\n\t\t */\r\n\t\tDOMJunk.createGroups = function(memberSet) {\r\n\t\t\tconst out = {};\r\n\t\t\teach(memberSet, (selector, memberName) => {\r\n\t\t\t\tlet value = null;\r\n\t\t\t\tif (isString(selector)) {\r\n\t\t\t\t\tvalue = DOMJunk(selector);\r\n\t\t\t\t} else if (isFunction(selector)) {\r\n\t\t\t\t\tvalue = selector();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = selector;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tout[memberName] = value;\r\n\t\t\t});\r\n\t\t\treturn out;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Creates a new application state driver.\r\n\t\t * @param {Object} stateApplicationFuncMap a map of state member name to Function.\r\n\t\t * \t\tThe function is called if that state's member changes its value.\r\n\t\t * \t\tFirst function parameter is the new value.\r\n\t\t * \t\tSecond function parameter is the previous value.\r\n\t\t * @returns a new AppState object.\r\n\t\t */\r\n\t\tDOMJunk.createAppState = function(stateApplicationFuncMap) {\r\n\t\t\treturn new AppState(stateApplicationFuncMap);\r\n\t\t};\r\n\t\t\r\n\t\t/********************************************************************/\r\n\r\n\t\tDOMJunk.extend('each', $each);\r\n\t\tDOMJunk.extend('find', $find);\r\n\t\tDOMJunk.extend('child', $child);\r\n\t\tDOMJunk.extend('children', $children);\r\n\t\tDOMJunk.extend('parent', $parent);\r\n\r\n\t\tDOMJunk.extend('clear', $clear);\r\n\t\tDOMJunk.extend('append', $append);\r\n\t\tDOMJunk.extend('refill', $refill);\r\n\t\tDOMJunk.extend('refillList', $refillList);\r\n\t\tDOMJunk.extend('html', $html);\r\n\t\tDOMJunk.extend('text', $text);\r\n\r\n\t\tDOMJunk.extend('set', $set);\r\n\t\tDOMJunk.extend('merge', $merge);\r\n\r\n\t\tDOMJunk.extend('style', $style);\r\n\t\tDOMJunk.extend('attr', $attr);\r\n\t\tDOMJunk.extend('classAdd', $classAdd);\r\n\t\tDOMJunk.extend('classRemove', $classRemove);\r\n\t\tDOMJunk.extend('classToggle', $classToggle);\r\n\r\n\t\tDOMJunk.extend('attach', $attach);\r\n\t\tDOMJunk.extend('detach', $detach);\r\n\r\n\t\tDOMJunk.extendSelection('get', $get);\r\n\t\tDOMJunk.extendSelection('first', $first);\r\n\t\tDOMJunk.extendSelection('last', $last);\r\n\t\tDOMJunk.extendSelection('form', $form);\r\n\t\tDOMJunk.extendSelection('apply', $apply);\r\n\r\n\t\tconst wrapAttach = function(attachName) {\r\n\t\t\treturn function(func) { this.attach(attachName, func); };\r\n\t\t}\r\n\r\n\t\tDOMJunk.extendSelection('load',     wrapAttach('load'));\r\n\t\tDOMJunk.extendSelection('unload',   wrapAttach('unload'));\r\n\t\tDOMJunk.extendSelection('click',    wrapAttach('click'));\r\n\t\tDOMJunk.extendSelection('dblclick', wrapAttach('dblclick'));\r\n\t\tDOMJunk.extendSelection('hover',    wrapAttach('mouseenter'));\r\n\t\tDOMJunk.extendSelection('leave',    wrapAttach('mouseleave'));\r\n\t\tDOMJunk.extendSelection('keydown',  wrapAttach('keydown'));\r\n\t\tDOMJunk.extendSelection('keyup',    wrapAttach('keyup'));\r\n\t\tDOMJunk.extendSelection('focus',    wrapAttach('focus'));\r\n\t\tDOMJunk.extendSelection('blur',     wrapAttach('blur'));\r\n\t\tDOMJunk.extendSelection('change',   wrapAttach('change'));\r\n\r\n\t\tDOMJunk.extendAJAX('text', $ajaxTextHandler);\r\n\t\tDOMJunk.extendAJAX('text/plain', $ajaxTextHandler);\r\n\r\n\t\tDOMJunk.extendAJAX('json', $ajaxJSONHandler);\r\n\t\tDOMJunk.extendAJAX('application/json', $ajaxJSONHandler);\r\n\r\n\t\tDOMJunk.extendAJAX('xml', $ajaxXMLHandler);\r\n\t\tDOMJunk.extendAJAX('text/xml', $ajaxXMLHandler);\r\n\t\tDOMJunk.extendAJAX('application/xml', $ajaxXMLHandler);\r\n\t\tDOMJunk.extendAJAX('html', $ajaxXMLHandler);\r\n\t\tDOMJunk.extendAJAX('text/html', $ajaxXMLHandler);\r\n\t\tDOMJunk.extendAJAX('xhtml', $ajaxXMLHandler);\r\n\t\tDOMJunk.extendAJAX('text/xhtml', $ajaxXMLHandler);\r\n\t\t\r\n\t\tDOMJunk.id =    $getById;\r\n\t\tDOMJunk.class = $getByClassName;\r\n\t\tDOMJunk.tag =   $getByTagName;\r\n\r\n\t\tDOMJunk.each = each;\r\n\t\tDOMJunk.fold = fold;\r\n\t\tDOMJunk.merge = merge;\r\n\t\tDOMJunk.queryString = queryString;\r\n\r\n\t\tDOMJunk.isType = isType;\r\n\t\tDOMJunk.isUndefined = isUndefined;\r\n\t\tDOMJunk.isNull = isNull;\r\n\t\tDOMJunk.isBoolean = isBoolean;\r\n\t\tDOMJunk.isNumber = isNumber;\r\n\t\tDOMJunk.isString = isString;\r\n\t\tDOMJunk.isArray = isArray;\r\n\t\tDOMJunk.isFunction = isFunction;\r\n\t\tDOMJunk.isObject = isObject;\r\n\t\tDOMJunk.isBlank = isBlank;\r\n\t\tDOMJunk.e = createElement;\r\n\t\tDOMJunk.t = createText;\r\n\r\n\t\tDOMJunk.AJAX = $ajax;\r\n\r\n\t\tDOMJunk.JSONAJAX =        $jsonAjax;\r\n\t\tDOMJunk.JSONAJAX.get =    function(url, headers)       { return $jsonAjax('get', url, null, headers); };\r\n\t\tDOMJunk.JSONAJAX.delete = function(url, headers)       { return $jsonAjax('delete', url, null, headers); };\r\n\t\tDOMJunk.JSONAJAX.put =    function(url, data, headers) { return $jsonAjax('put', url, data, headers); };\r\n\t\tDOMJunk.JSONAJAX.post =   function(url, data, headers) { return $jsonAjax('post', url, data, headers); };\r\n\t\tDOMJunk.JSONAJAX.patch =  function(url, data, headers) { return $jsonAjax('patch', url, data, headers); };\r\n\r\n\t\t/********************************************************************/\r\n\r\n\t\tlet old$DJAssignment     = CTX.$DJ;\r\n\t\tlet old$DJAAssignment    = CTX.$DJA;\r\n\t\tlet old$DJJAssignment    = CTX.$DJJ;\r\n\t\tlet old$DJMainAssignment = CTX.$DJMain;\r\n\r\n\t\t/**\r\n\t\t * Restores the previous assigment of '$DJ' and '$DJU' and '$DJA' and '$DJJ' at load.\r\n\t\t */\r\n\t\tDOMJunk.noConflict = function() {\r\n\t\t\tCTX.$DJ     = old$DJAssignment;\r\n\t\t\tCTX.$DJA    = old$DJAAssignment;\r\n\t\t\tCTX.$DJJ    = old$DJJAssignment;\r\n\t\t\tCTX.$DJMain = old$DJMainAssignment;\r\n\t\t};\r\n\t\t\r\n\t\tCTX.DOMJunk = DOMJunk;\r\n\t\tCTX.$DJ     = DOMJunk;\r\n\t\tCTX.$DJA    = DOMJunk.AJAX;\r\n\t\tCTX.$DJJ    = DOMJunk.JSONAJAX;\r\n\t\tCTX.$DJMain = function(func) { DOMJunk.tag('body').load(func); };\r\n\r\n\t\t/**\r\n\t\t TODO: Add stuff, maybe.\r\n\t\t\tTemplateCreate\r\n\t\t\tTemplateSet\r\n\t\t\tTemplateAppend\r\n\t\t\tTemplateFill\r\n\t\t\tFormValidate\r\n\t\t\tFormFill\r\n\t\t\tDOMSiblings\r\n\t\t\tDOMDescendants\r\n\t\t\tDOMAncestors\r\n\t\t*/\r\n\r\n})(this);\r\n"],"names":["CTX","document","querySelectorAll","console","error","querySelector","createElement","createTextNode","Element","prototype","DOMParser","isBoolean","obj","isType","isFunction","isObject","isBlank","isUndefined","isNull","isArray","length","isNumber","isNaN","isString","trim","fold","func","merge","let","out","each","arguments","a","queryString","map","accum","value","key","i","push","encodeURIComponent","join","type","Object","toString","call","list","x","hasOwnProperty","matches","elem","selector","elemMatches","matchesSelector","msMatchesSelector","ENTITIES","&","<",">","\"","'","/","`","=","HTML_SPECIAL","AJAX_OPTIONS_DEFAULTS","data","dataType","responseType","headers","responseIsSuccess","async","user","password","SelectionGroup","constructor","elements","forceOne","this","AJAXCall","url","opt","body","beforeSendFunc","uploadStartFunc","uploadProgressFunc","uploadSuccessFunc","uploadEndFunc","startFunc","progressFunc","successFunc","failureFunc","alwaysFunc","abortFunc","timeoutFunc","FAILFUNC","xhr","status","statusText","event","ABORTFUNC","TIMEOUTFUNC","XMLHttpRequest","open","method","setRequestHeader","upload","onloadstart","onprogress","lengthComputable","loaded","total","onload","onloadend","onerror","onabort","ontimeout","c","parseInt","CHARSET","responseContentType","getResponseHeader","idx","indexOf","mimeType","substring","charsetIdx","charsetType","typeName","res","responseTypeHandlers","response","err","setTimeout","send","beforeSend","start","progress","success","uploadStart","uploadProgress","uploadSuccess","uploadFinished","failure","always","abort","timeout","AppState","stateApplierFunctionMap","Error","state","nextStateChanges","applierTimeout","setState","nextState","__timeoutApply","clearTimeout","applyState","touchState","memberName","bindStateEvent","eventName","self","group","DOMJunk","attach","EVENTNAME","name","toLowerCase","$ajax","param","options","toUpperCase","JSON","stringify","qs","$jsonAjax","$ajaxTextHandler","responseContent","Util","$ajaxXMLHandler","_","parseFromString","$ajaxJSONHandler","parse","query","one","extend","retval","apply","extendSelection","extendAJAX","handledTypeName","createGroups","memberSet","createAppState","stateApplicationFuncMap","index","children","parentElement","firstChild","removeChild","appendChild","Document","clear","append","arr","generatorFunc","v","k","gen","innerHTML","text","innerText","replace","m","memberMap","input","style","s","names","getAttributeNames","getAttribute","setAttribute","classes","className","split","classSet","remset","removeAttribute","argSet","callback","formData","find","t","selectorMap","wrapAttach","attachName","id","getElementById","class","classname","getElementsByClassName","tag","tagname","namespace","getElementsByTagName","getElementsByTagNameNS","e","attribs","attrObj","createAttribute","setAttributeNode","AJAX","JSONAJAX","get","delete","put","post","patch","old$DJAssignment","$DJ","old$DJAAssignment","$DJA","old$DJJAssignment","$DJJ","old$DJMainAssignment","$DJMain","noConflict","load"],"mappings":"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"}